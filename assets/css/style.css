/* Fonts */

@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');
/* Roboto */

* {
    box-sizing: border-box;
}

html {
    font-size: 62.5%;
}

b {
    font-weight: 700;
}

ul,
ol,
dl {
    list-style-position: inside;
}

#myApp {
    font-size: 1.8rem;
    font-family: 'Roboto', sans-serif;
    line-height: 1.5;
    background-image: url('../img/bg.jpg');
    background-size: cover;
    width: 100%;
    height: 100vh;
    color: white;
    padding: 30px 70px 80px;
}

#myApp .logo-container {
    margin-bottom: 60px;
}

#myApp .m-0 {
    margin: 0;
}

#myApp .logo-container img {
    width: 150px;
}

#myApp .welcome {
    font-size: 7.5rem;
    line-height: 0.8;
    margin-bottom: 30px;
    text-align: left;
}

#myApp .p1Container {
    color: #b22a8a;
    font-weight: 700;
    font-size: 3rem;
}

#myApp .p2Container {
    font-size: 1.6rem;
    color: white;
}

#myApp .content {
    margin-bottom: 40px;
}

#myApp .list ul {
    padding-left: 20px;
    font-size: 1.6rem;
    margin-bottom: 80px;
    margin-top: 40px;
}

#myApp .list li {
    padding-left: 0;
}

#myApp .inputs #promise {
    border: 1px solid white;
    height: 20px;
    width: 20px;
    appearance: none;
    margin-right: 10px;


}

#myApp .inputs #promise:checked {
    appearance: auto;
}

#myApp .inputs label {
    font-size: 1.4rem;
    font-weight: 700;
}

#myApp .square-transparent-btn {
    border: 2px solid white;
    font-size: 2rem;
    font-weight: 700;
    padding: 20px 50px;
    background-color: transparent;
    color: white;
    cursor: pointer;
}

#myApp .inputs {
    display: flex;
    justify-content: space-between;
}

#myApp .square-btn {
    background-color: #00FFFF;
    box-shadow: 0 0 1cm rgba(0, 255, 255, 0.8);
    color: black;
    font-size: 2rem;
    font-weight: 700;
    padding: 20px 50px;
    border-style: none;
    cursor: pointer;
}

#myApp .square-btn:disabled {
    cursor: auto;
    background-color: rgba(193, 193, 193, .5);
}

#myApp .checkbox {
    display: flex;
    align-items: center;
    justify-content: flex-start;

}

#myApp #promise {
    cursor: pointer;
}

#myApp .question {
    text-align: center;
    font-size: 5rem;
}

#myApp .answer-buttons {
    margin-top: 70px;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}

#myApp .answer-button {
    border-radius: 50em;
    color: white;
    background-color: rgba(255, 255, 255, 0.2);
    border: 4px solid white;
    border-bottom: 1px solid white;
    padding: 20px 40px;
    margin: 10px 20px;
    flex-basis: 45%;
    flex-grow: 0;
}

#myApp .active {
    background-color: #96129f;
}

.questions-number {
    text-align: center;
    text-transform: uppercase;
    margin-top: 40px;
}

.star {
    font-size: 60px;
    cursor: pointer;
    color: #0a1661;
    display: inline;
    margin: 5px;

}

.star:hover,
.star.active {
    color: #00FFFF;
}

.star:hover,
.star.active {

    color: blue;

    color: #00FFFF;
}

.star:hover,
.star.active {
    color: #00FFFF;
}

.stars-rating {
    margin-top: 20px
}

.main-title {
    text-align: center;
    width: fit-content;
    margin: 0 auto;
}

.main-title p:first-of-type {
    font-size: 6rem;
    font-weight: 700;
    text-align: center;
}

.r p:first-of-type {
    font-size: 4rem;
    padding: 5px 0;
    line-height: 0.8;
    margin-bottom: 4px;
}


.main-title p:nth-of-type(2) {
    font-size: 2.5rem;
    margin-top: 20px;
    text-align: center;
    line-height: 1.5;

}

.r p:nth-of-type(2) {
    margin: 0;
    padding: 0;
    font-size: 2rem;
    line-height: 0.8;
}

.content {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.close-text {
    line-height: 1;
}

.result-esit-positive p:first-of-type {
    font-size: 5rem;
}

.result-esit-negative p:first-of-type {
    font-size: 5rem;
    text-align: right;
}

.result-esit-positive p:nth-of-type(2) {
    font-weight: 700;
    font-size: 5rem;
}

.result-esit-negative p:nth-of-type(2) {
    font-weight: 700;
    font-size: 5rem;
    text-align: right;
}

.result-esit-positive p:nth-of-type(3) {
    font-size: 1.6rem;
}

.result-esit-negative p:nth-of-type(3) {
    text-align: right;
    font-size: 1.6rem;
}

.button-container {
    display: flex;
    justify-content: center;
}

.feedback {
    text-align: center;
    margin: 0 auto;
}

.feedback label {
    font-size: 2.5rem;
    padding-top: 50px;
    display: block;
}

#comment {
    margin-top: 30px;
    margin-bottom: 40px;
    border-style: none;
    border-bottom: 2px solid #C2118D;
    background-color: transparent;
    width: 100%;
    color: white;
    outline: none;
    padding: 4px 15px;
    font-size: 2rem;

}

.more-info {
    background-color: #00FFFF;
    box-shadow: 0 0 1cm rgba(0, 255, 255, 0.8);
    border-style: none;
    color: black;
    font-size: 2rem;
    font-weight: 700;
    padding: 20px 50px;
    margin-top: 50px;

}



.top-flex {
    display: flex;
    justify-content: space-between;
}


#myApp .questions-number {
    text-align: center;
    margin-top: 50px;
}

.widget {
    margin: 0 auto;
    width: 350px;
    margin-top: 50px;
    position: relative;
}

.chart-header {

    color: #16140d;
    text-align: center;
    line-height: 40px;
    border-top-left-radius: 7px;
    border-top-right-radius: 7px;
    font-weight: 400;
    font-size: 1.5em;
}

.chart-footer {
    color: #16140d;
    text-align: center;
    font-size: 10px;
}

.chart-container {
    padding: 25px;
}

.shadow {
    -webkit-filter: drop-shadow(0px 3px 3px rgba(0, 0, 0, .5));
    filter: drop-shadow(0px 3px 3px rgba(0, 0, 0, .5));
}

.chart-text {
    color: white;
    font-size: 10px;
    position: absolute;
    z-index: 3;
    right: 50%;
    top: 55%;
}

/* Sets the containers height and width */
.base-timer {
    position: relative;
    height: 300px;
    width: 300px;
}

/* Removes SVG styling that would hide the time label */
.base-timer__circle {
    fill: none;
    stroke: none;
}


@keyframes countdown {
    from {
        stroke-dashoffset: 0px;
    }

    to {
        stroke-dashoffset: 113px;
    }
}

/* The SVG path that displays the timer's progress */
.base-timer__path-elapsed {
    stroke-width: 7px;
    stroke: grey;
}

.base-timer__label {
    position: absolute;

    /* Size should match the parent container */
    width: 300px;
    height: 300px;

    /* Keep the label aligned to the top */
    top: 0;

    /* Create a flexible box that centers content vertically and horizontally */
    display: flex;
    align-items: center;
    justify-content: center;

    /* Sort of an arbitrary number; adjust to your liking */
    font-size: 48px;
}

.base-timer__path-remaining {
    /* Just as thick as the original ring */
    stroke-width: 7px;

    /* Rounds the line endings to create a seamless circle */
    stroke-linecap: round;

    /* Makes sure the animation starts at the top of the circle */
    transform: rotate(90deg);
    transform-origin: center;

    /* One second aligns with the speed of the countdown timer */
    transition: 1s linear all;

    /* Allows the ring to change color when the color value updates */
    stroke: currentColor;
}

.base-timer__svg {
    /* Flips the svg and makes the animation to move left-to-right */
    transform: scaleX(-1);
}

.base-timer__path-remaining.green {
    color: #00FFFF;
}

.base-timer__path-remaining.orange {
    color: orange;
}

.base-timer__path-remaining.red {
    color: red;
}