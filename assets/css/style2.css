/* Fonts */
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');
/* Roboto */

* {
    box-sizing: border-box;
}

html {
    font-size: 62.5%;
}

b {
    font-weight: 700;
}

ul,
ol,
dl {
    list-style-position: inside;
}

#myApp {
    font-size: 1.8rem;
    font-family: 'Roboto', sans-serif;
    line-height: 1.5;
    background-image: url('../img/bg.jpg');
    background-size: cover;
    width: 100%;
    height: 100vh;
    color: white;
    padding: 60px 110px 80px;
}

#myApp .logo-container {
    margin-bottom: 60px;
}

#myApp .logo-container img {
    width: 200px;
}

#myApp .main-title {
    font-size: 7.5rem;
    line-height: 0.8;
    margin-bottom: 30px;
}

#myApp .content p:first-of-type {
    color: #b22a8a;
    font-weight: 700;
    font-size: 3rem;
}

#myApp .content p:nth-of-type(2) {
    font-size: 1.6rem;
}

#myApp .content {
    margin-bottom: 40px;
}

#myApp .list ul {
    padding-left: 20px;
    font-size: 1.6rem;
    margin-bottom: 80px;
}

#myApp .list li {
    padding-left: 0;
}

#myApp .inputs #promise {
    border: 1px solid white;
    height: 20px;
    width: 20px;
    appearance: none;
}

#myApp .inputs label {
    font-size: 1.4rem;
    font-weight: 700;
}

#myApp .square-btn:disabled {
    border: 2px solid white;
    font-size: 2rem;
    font-weight: 700;
    padding: 20px 50px;
    background-color: transparent;
    color: white;
    
}

#myApp .square-btn {
    background-color: #00FFFF;
    color: black;
    font-size: 2rem;
    font-weight: 700;
    padding: 20px 50px;
}

#myApp .question {
    text-align: center;
    font-size: 5rem;
}

#myApp .answers {
    margin-top: 70px;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}

#myApp .answer-button {
    cursor: pointer;
    flex: 0 1 40%;
    margin: 10px;
    border: 2px solid white;
    opacity: 0.5;
    background-color: transparent;
    font-size: 1.6rem;
    color: white;
    padding: 20px;
    width: 30%;
    font-weight: 700;
    background: 
        linear-gradient(#fff, #fff) padding-box,
        linear-gradient(60deg, #00f, #00e8ff) border-box;
    border-radius: 50em;
    border: 4px solid transparent;
    display: inline-block;
}

.questions-number{
    text-align: center;
    text-transform: uppercase;
    margin-top: 40px;
}

#myApp .questions-number {
    text-align: center;
    margin-top: 50px;
}


  /* Sets the containers height and width */
.base-timer {
    position: relative;
    height: 300px;
    width: 300px;
  }
  
  /* Removes SVG styling that would hide the time label */
  .base-timer__circle {
    fill: none;
    stroke: none;
  }
  

  @keyframes countdown {
    from {
      stroke-dashoffset: 0px;
    }
    to {
      stroke-dashoffset: 113px;
    }
  }

  /* The SVG path that displays the timer's progress */
  .base-timer__path-elapsed {
    stroke-width: 7px;
    stroke: grey;
  }

  .base-timer__label {
    position: absolute;
    
    /* Size should match the parent container */
    width: 300px;
    height: 300px;
    
    /* Keep the label aligned to the top */
    top: 0;
    
    /* Create a flexible box that centers content vertically and horizontally */
    display: flex;
    align-items: center;
    justify-content: center;
  
    /* Sort of an arbitrary number; adjust to your liking */
    font-size: 48px;
  }

  .base-timer__path-remaining {
    /* Just as thick as the original ring */
    stroke-width: 7px;
  
    /* Rounds the line endings to create a seamless circle */
    stroke-linecap: round;
  
    /* Makes sure the animation starts at the top of the circle */
    transform: rotate(90deg);
    transform-origin: center;
  
    /* One second aligns with the speed of the countdown timer */
    transition: 1s linear all;
  
    /* Allows the ring to change color when the color value updates */
    stroke: currentColor;
  }
  
  .base-timer__svg {
    /* Flips the svg and makes the animation to move left-to-right */
    transform: scaleX(-1);
  }

  .base-timer__path-remaining.green {
    color: #00FFFF;
  }
  
  .base-timer__path-remaining.orange {
    color: orange;
  }
  
  .base-timer__path-remaining.red {
    color: red;
  }


.stars-rating{
    
    
}

.star {
    font-size: 60px;
    cursor: pointer;
    color: #0b113b;
    display: inline;
   
}

  .star:hover,
  .star.active {
    color: #00FFFF;
  }

  .main-title {
    text-align: center;
  }

  .main-title p:first-of-type{
    font-size: 6rem;
    font-weight: 700;
  }

  .main-title p:nth-of-type(2){
    font-size: 2.5rem;
    margin-top: 15px;
  }

  .content {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .result-esit {
    font-size: 6rem;
    font-weight: 700;
  }

  .button-container {
    display: flex;
    justify-content: center;
 }

 .rate-us {
    padding: 15px;
    width: 10%;
    border: 1.8px solid white;
    background-color: transparent;
    color: white;
    font-weight: 700;
 }

 .feedback {
    text-align: center;
    margin: 0 auto;
 }
 .feedback label{
    font-size: 2.5rem;
   padding-top: 50px ;
    display: block;
 }

 #comment {
    margin-top: 30px;
    margin-bottom: 40px;
    border-style: none;
    border-bottom: 2px solid #C2118D;
    background-color: transparent;
    width: 100%;
    color: white
    
    
}
.more-info{
    background-color: #00FFFF;
    color: black;
    font-size: 2rem;
    font-weight: 700;
    padding: 20px 50px;
    margin-top: 50px;
}

.top-flex{
    display: flex;
    justify-content: space-between;
}

